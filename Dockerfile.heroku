## Pour la partie frontend

FROM node:16-alpine as build-frontend

WORKDIR /app

COPY ./frontend/package*.json ./

RUN npm install

COPY ./frontend .

RUN npm run build

## Pour la partie backend

FROM php:8.2-apache as build-backend
WORKDIR /var/www/html

# Copier le script de démarrage
COPY start-apache.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/start-apache.sh

# Copie du code source de l'application backend
COPY ./backend .

RUN apt-get update && apt-get install -y \
    libxml2-dev \
    libonig-dev \
    libzip-dev \
    libpq-dev \
    git \
    zsh \
    unzip \
    && docker-php-ext-install pdo_pgsql dom xml mbstring pdo_mysql zip \
    && a2enmod rewrite \
    && service apache2 restart \
    && composer install --optimize-autoloader

## Pour la partie nginx
FROM nginx:stable-alpine
COPY --from=build-frontend /app/dist /usr/share/nginx/html
COPY --from=build-backend /var/www/html /var/www/html
# EXPOSE 80

#CMD ["nginx", "-g", "daemon off;"]

# Commande pour démarrer Apache
CMD ["start-apache.sh"]