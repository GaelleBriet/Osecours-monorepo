# Étape de construction
FROM node:20-alpine as build-stage

WORKDIR /app

# Copier les fichiers de package.json et package-lock.json
COPY package*.json ./

# Installer les dépendances, y compris les devDependencies
RUN npm install

# Copier le reste du code source de l'application
COPY . .

# Construire l'application
RUN npm run build

# Étape de production
#FROM nginx:stable-alpine as production-stage
#COPY --from=build-stage /app/dist /usr/share/nginx/html
#COPY nginx.conf /etc/nginx/conf.d/default.conf.template

FROM node:20-alpine as production-stage

WORKDIR /app

# Copier les fichiers de l'application construite
COPY --from=build-stage /app/dist ./dist
COPY --from=build-stage /app/package*.json ./
COPY --from=build-stage /app/index.js ./

RUN npm ci --only=production

EXPOSE $PORT

#CMD ["nginx", "-g", "daemon off;"]
#CMD ["sh", "-c", "nvsubst < /etc/nginx/conf.d/default.conf.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"]
#CMD /bin/sh -c "sed -i -e 's/\$PORT/'\"$PORT\"'/g' /etc/nginx/conf.d/default.conf.template && nginx -g 'daemon off;'"
CMD ["npm", "start"]